[{"title":"HTML","date":"2022-01-21T10:53:51.000Z","url":"/2022/01/21/HTML/","categories":[["undefined",""]],"content":"​注：HTML语法在博客中会翻译即将 &lt; &gt; 替换为 《 》 HTML是一种超为本标记语言它的用法有一定的对称性有开始标签就有结束标签 《!DOCTYPE html》 《!–HTML开始声明，括号加感叹号内的内容仅用于注释–》《html》 《! html开始标签》 《head》 《! 代码段仅用于网页内部》 《meta charset=”uft-8”》 《!–仅用于指示用该型号编码否则会乱码–》 《meta name=”keywords” content=”CSDN博客,CSDN学院,CSDN论坛,CSDN直播”》 《!–这是给网页添加关键字便于搜索–》 《title》此处是网页明不一定是网页内容的标题《/title》 《/head》 《body》 《!–此处才是网页内容的位置–》 《/body》《/html》 《!–结束标签–》 2,在HTML中显示视频的函数快（音频取得时相对路径，平级直接文件名） 《video width=”1235” height=”2131” controls》《!–video 说明此处是一个音频或视频 width即显示窗口宽度 height高度 controls添加控制键–》 《source src=”tty.mp4” type=”video/mp4”》 《!– 文件名 类型 视频 MP4格式–》 《/video》 3,播放音乐 《audio controls》 《source src=”yuy.mp3”》 《!–文件名其余与上文意思一样–》 4,显示图片 《ing src=”此处为图片地址加图片名或者是图片转base64的编码”》《!–该称编码好处是不用再需要图片即文本自带图片–》 5，网页跳转多个举例不同的类型 《a href=”naiyouguazi.github.io” target=”_blank”》点我跳转《/a》《!–target=”_blank有这个是另开一个网页跳转，没有是直接跳转–》 《a href=”可以是自己的另一个网页即自己跳自己.html” 点这个跳》《/a》《!– 换成mailto:加邮箱会跳转到你本机的发邮件的 打开到给该邮箱发文件的页面 –》《!– 换成javascript:alert(‘内容自己写’) 会出现页面提示–》 锚的问题 《a href=”#qwe”》点我《/a》《div id=”asd”》定位到此处《/div》《div id=”qwe”style=”position: absolute;top: 9999px;”》定位到此处2《/div》《!–即页面开始在asd点击后到离asd 9999出的qwe 这个也可以在别人的网页用#加名字进行定位查询–》 6，常见的关键字 《h》 《/h》 改变中间字体的大小从一到六《h1》《/h1》到六其中1字号最大六最小《div》《/div》 换行《div style=”color:red”》《/div》可以改变自已颜色《span》《/span》 意思差不多主要是分类用的《br》 用于端末换行符的意思《pre》《/pre》 这个用于一段文字在html显示中的空格换行会于文本一致&nbsp; 相当于一个空格键《p》《/p》 用这个就相当于古诗文一样有逼格与下一句隔一行《center》《/center》 中间文字居中7，输入问题 《input type=”text” /》 《!–即显示一个可以输入文本的框–》《input type=”button” value=”777”/》 《!–显示一个名字为777可以按的按钮–》《input type=”submit” value=”888”/》 《!–显示一个名字为888可以按的按钮–》《button》999《/button》 《!–显示一个名字为999可以按的按钮–》《!–三种是有不同的至于啥不同问百度–》 《form action=”; method=”git”》《!–获取到的内容在百度上搜索–》《input type=”text” name=”wd”/》 《!–创一个输入框–》《input type=”submit” value=”111”/》 《!–创一个111名字的按钮，按下后会将输入框内容上传–》《/form》 若将text改成password即输入框内输入的内容会被隐藏改成hidden即会不显示这个常用于传参时不被用户看到 《input type=”checkbox”/》111《input type=”checkbox”/》222《input type=”checkbox”/》333《!–即会出现三个复选框111 222 333 可供选择这个可以多选–》《input type=”radio” name=”3”/》111《input type=”radio” name=”3”/》222《input type=”radio” name=”3” checked=”ture”/》333《!–当name相同时会被认为一组而互斥即三个选项只能选一个 加上那个会默认选三–》 《select》 《option value=”11”》1《/option》 《!–1是给我们看的value是上传的信息–》 《option》2《/option》 《option》3《/option》 《option》4《/option》《/select》 《!–会出现一个下滑的选择框 1 2 3 4可供选择–》 《textarea rows=”200” clos=”333”》 efggfsvbmvbv《/textarea》 《!–会出现一个200*333的文本框并有efggfsvbmvbv–》 《input type=”file” /》《!–会出现一个框框可以选本地文件夹–》《ul type=”square”》《!–出现带方块的将他们列出来–》 《li》q《/li》 《li》e《/li》 《li》qq《/li》《/ul》 显示一个表格 《table border=”1”》《!–表格开始标签带上后面那个可以有框框–》 《tr》 《th》2《/th》 《td》2《/td》《!–第一行内容TH加粗TD正常–》 《/tr》 《tr》 《th》2《/th》 《td》2《/td》 《/tr》《/table》《!–会打印一个2*2都是2的表格–》 分割页面 《frameset rows=”%50,%50”》 《frame src=”1.html”》 《frame src=”2.html”》《/frameset》 《!–这样会将屏幕分成两块分别显示1 2 也可以玩的花怎末分都行注意1 2需和本身文件在同级，并且frameset不在body框架下–》 开小窗 《iframe src=”;》《/iframe》《!–开一个网址如上的小窗，大小啥的可以改至于怎莫改问百度–》 ​"},{"title":"PHP","date":"2022-01-15T04:14:50.000Z","url":"/2022/01/15/PHP%E7%AC%94%E8%AE%B0/","categories":[["undefined",""]],"content":"注：PHP语法在博客中会翻译即将 &lt; &gt; 替换为 《 》( 一 ) 1)了解php开始与结束； 2）了解php的执行块 3）事无绝对在一些情况下php结束标记可以省略而且 （二） 4）php可以嵌入其他语言中所以说网页秀不秀看其他的啦 （三） （四） · 4）合理运用注释可以方便我们阅读便于理解 （五） 1）变量概念 自已理解可变的量例如衣柜 7）php变量 像这种用法也是对的 7)php中删除变量的用法和 起小名的用法 槑~槑"},{"title":"滴水课程笔记","date":"2022-01-15T03:31:26.000Z","url":"/2022/01/15/%E6%BB%B4%E6%B0%B4%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B01/","categories":[["undefined",""]],"content":" 1，进制问题，我们正常使用的一直为十进制即封十进一，但也有其他的 例如时间计时中的秒到分即六十进一所以说进制是不仅仅只有十进制的还 有其他的。 2，在计算机中常见的不仅有十进制还有十六进制与二进制，而十六进制与二 进制在计算机中其主要作用，由于计算机在内部是由二进制进行运算储存的 但二进制又有一定的局限性进而使用十六进制。 3，二进制即是由 0 1 两个字符构成 二进制（0到15）0 1 10 11 100 101 110 111 1000 1001 1010 1011 1100 1101 1110 1111十六进制即 0 1 2 3 4 5 6 7 8 9 a b c d e f十六个字符构成 十六进制（0到15）0 1 2 3 4 5 6 7 8 9 a b c d e f4，由此不难发现二进制较长不易抒写于是用十六进制代替二进制就较易书写 存储。 二进制相比较十六进制0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 11110 1 2 3 4 5 6 7 8 9 a b c d e f所以说计算机在内部储存是常用十六进制来代替二进制。 听课笔记若有错误希望海涵并指出错误，感谢。 1，日常中数字的个数是没有个数的，但在计算机中不是的，在计算机中储存个数是一定 一旦超出便会舍弃。 2，在四位宽度的计算机中，也就是计算机只能储存二进制的四位（0000 1111） 8 79 6a 5b 4c 3d 2e 1f 0 若是有符号位则分为（0000到0111）和（1110到1111）即若是无符号为 0000 1111（0~15） 0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 11110 1 2 3 4 5 6 7 -8 -7 -6 -5 -4 -3 -2 -13，在八位宽度的计算机中，也就是计算机只能储存二进制的八位（0 到FF） 80 7f。。。 。。。。。。 。。。ff 0若是有符号位则分为（0到7f）和（80到ff）即若是无符号为 0 ff（0~255） 0 1 … 7f 80 81 … ff0 1 … 128 -128 -127 … -14,在我们实际生活中常用到的为X32位和X64位比较多 同理32位无符号为是（0到ffffffff)有符号为分为（0到7fffffff)和（8000到ffffffff) 5，计算机运算问题，首先需要明白计算机是不会加减乘除的他只会位运算即 或 非 与 异或 或运算（|）即两个均为零时才为零，有一个唯一都为1 |—————————— 与运算（&amp;）两个相同才为一 &amp;—————————— 非运算（~）零变为一，一变为零（非运算只需一个值） ~—————————— 异或运算（^）只有两个不同时才为一 ^ —————————— 6，明白以上位运算以后便可以知晓计算机是如何做加减乘除的啦 第一步转成二进制 00001001 00001010第二部进行异或运算 00001001 ^—————— 进行与运算 判断是否全为零 是进行转进制输出R 否进行移位符左移 &lt;&lt;一位 &amp;————— 再次进行异或运算 00000011 ^—————— 进行与运算 判断是否全为零 是进行转进制输出R 否进行移位符左移 &lt;&lt;一位 &amp;—————— 结束 00010011——&gt;197,会了加法减法不就是手到擒来吗？至于乘除无非就是多加几次的问题，反正计算机不是你， 又没有小情需。 8，在我们正常情况下，我们会遇到一些求第几位是什莫的问题（在二进制中）这个若我们在 用小本本写就太拉跨了，既然我们学了位运算那岂不是可以有更好的方法那，这个是当然有的 很简单我们只需要一个与运算就能解决。 一个7fa的 第7位举例 7fa ——&gt;0011111111010 &amp;—————————— 9，就以上位运算也诞生了最简单加密方式即通过位运算加密 加密 一串数字 5484 5484——&gt;0101 0100 1000 0100密匙 4 （密匙为一个数字 所以加密也为一个一个加密） 4——&gt;0100 输出结果 1120 或 0001 0000 1100 0000当然要解密只需通过密匙在进行一次异或即可 密文 0001 0000 1100 0000 4——&gt;0100密匙 4 0001 0000 1100 0000 结果 0101 0100 1000 0100 👈5484 槑~槑 三 1，寄存器他与普通的内存条差不多但它是在CPU内部的可以对CPU数据进行快速储存 寄存器的基本样式如下 寄存器 编号 （二进制） 32位 16位 8位EAX AX AL 0000 0ECX CX CL 0001 1EDX DX DL 0010 2EBX BX BL 0011 3ESP SP AH 0100 4EBP BP CH 0101 5ESI SI DH 0110 6EDI DI BH 0111 72，实际上寄存器是包含关系大致意思 3，基础汇编指令 mov 指令 用法 mov eax,0x32435 即将32453移动到EAX中 基本指令 MOV指令 移动ADD指令 加法SUB指令 减法NOT指令 逻辑运算 非运算AND指令 与运算OR指令 或运算XOP指令 异或运算用法示例 add eax,123（就是在寄存器eax记录数再加一） 4，内存 当我们需要运算一个很大的数时我们就会发现寄存器不够用了，而这就自然而然 引出内存的概念，内存是在CPU外面的所以说它可以很大但速度就与寄存器差很多啦，所 以内存不想寄存器有那麽多EAX ECX 啥的具体分类，内存是通过0x000 0x001 0x002这种 进行编号的由于寄存器和内存功能啥的是一致的（内存要和硬盘区分开）所以说以32为计算 机为例寄存器识别 0x00000000到0xffffffff 所以说内存编号只能到0x00000000 0xffffffff为止 内存一个存储单元最大单位是字节 而寄存器是四个字节所以说在汇编中内存的读取是一次性读取 四个地址 内存编号0x00000000 0xffffffff 所以说内存存储最大位0xffffffff+1也就是4G，所以说32位 计算机对应的识别内存是4G。（事无绝对也可以通过补丁等手段令其改变） 5，在汇编中获取内存是若用0x3223f890f这种方法会与立即数产生矛盾所以用内存时需要先[]来将 地址括住 即写的数是多大 by 八位 word 十六位 dword 32位即正确格式 mov word ptr ds:[0x003243f9],0x4721abcd 槑~槑 四​1，在汇编中的寻址方式 读取内存的值 MOV EAX,dword prt ds:[0xabbc8221]这种是读取的改地址的值 LEA eax,dword prt ds:[0x36716bac]这种是读取的该地址不是地址里面的值 读取或写入数据时都应注意LEA MOV的读取的内容 在读取地址时需注意【在这里面是可以加减的但不能除，乘法也只能乘 1，2，4，8.在这里面也可以是EAX,ECX等】总之寻址方式挺好懂的不过多介绍 2，堆栈 这个不好解释但也挺好懂咱们直接上图 这个堆栈就是以一个寄存器例如EAX为底部ECX为顶部然后存入数据时从EAX开始储存（是EAX存的地址）然后以此储存并让ECX存最后一个数据的地址这样就是堆栈以后查找只需从EAX或ECX用偏移的方法依次查找。 ​"}]